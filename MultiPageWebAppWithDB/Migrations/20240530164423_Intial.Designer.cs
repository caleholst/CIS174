// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiPageWebAppWithDB.Models;

#nullable disable

namespace MultiPageWebAppWithDB.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20240530164423_Intial")]
    partial class Intial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MultiPageWebAppWithDB.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            Address = "123 Main St.",
                            Name = "Cale",
                            Note = "this is me",
                            PhoneNumber = "515-240-6671"
                        },
                        new
                        {
                            ContactId = 2,
                            Address = "123 1st Ave.",
                            Name = "Bob",
                            Note = "This is Bob",
                            PhoneNumber = "555-555-5555"
                        },
                        new
                        {
                            ContactId = 3,
                            Address = "987 3rd St.",
                            Name = "Joe Smith",
                            Note = "This is Joe Smith",
                            PhoneNumber = "999-999-9999"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
